FROM ubuntu:jammy

LABEL maintainer.name="Luigi Pertoldi"
LABEL maintainer.email="gipert@pm.me"

ARG ROOT_VERSION="6.26.06"
ARG VECGEOM_VERSION="1.1.18"
ARG GEANT4_VERSION="11.0.2"
ARG BXDECAY0_VERSION="1.1.0"
ARG CMAKE_BUILD_TYPE="Release"

ARG N_THREADS="8"

USER root
WORKDIR /root

# configure system
COPY packages packages.extra .
RUN apt-get update -qq && \
    ln -sf /usr/share/zoneinfo/UTC /etc/localtime && \
    DEBIAN_FRONTEND="noninteractive" apt-get -y install $(cat packages packages.extra) && \
    locale-gen en_US.UTF-8 && update-locale && \
    rm -rf /var/lib/apt/lists/* && \
# https://askubuntu.com/questions/1034313/ubuntu-18-4-libqt5core-so-5-cannot-open-shared-object-file-no-such-file-or-dir
    strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5

ENV LC_ALL="en_US.utf8" \
    LANGUAGE="en_US.utf8" \
    LANG="en_US.utf8"

# build and install VecGeom
RUN mkdir -p src build /opt/vecgeom && \
    wget -q -O- "https://gitlab.cern.ch/VecGeom/VecGeom/-/archive/v${VECGEOM_VERSION}/VecGeom-v${VECGEOM_VERSION}.tar.gz" \
        | tar --strip-components 1 -C src --strip=1 -x -z && \
    cd build && \
    cmake \
        -DCMAKE_INSTALL_PREFIX="/opt/vecgeom" \
        -DCMAKE_CXX_STANDARD=20 \
        -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}" \
        -DGDML=ON \
        -Dfail-on-missing=ON \
        ../src && \
    make -j ${N_THREADS} install && \
    cd .. && rm -rf build src

ENV PATH="/opt/vecgeom/bin:$PATH" \
    LD_LIBRARY_PATH="/opt/vecgeom/lib:$LD_LIBRARY_PATH"

# build install ROOT
RUN mkdir -p src build /opt/root && \
    wget -q -O- "https://root.cern/download/root_v${ROOT_VERSION}.source.tar.gz" \
        | tar --strip-components 1 -C src --strip=1 -x -z && \
    cd build && \
    cmake \
        -DCMAKE_INSTALL_PREFIX="/opt/root" \
# ROOT is bad software: https://root.cern/install/build_from_source/#caveats
        -DCMAKE_CXX_STANDARD=20 \
        -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}" \
        -Dbuiltin_veccore=OFF \
        -Dminimal=ON \
        -Dfail-on-missing=ON \
        ../src && \
    VERBOSE=1 make -j ${N_THREADS} install && \
    cd .. && rm -rf build src

# install ROOT binary release
# RUN mkdir -p /opt/root && \
#     wget -q -O- "https://root.cern/download/root_v${ROOT_VERSION}.Linux-ubuntu20-x86_64-gcc9.3.tar.gz" \
#         | tar --strip-components 1 -xz -C "/opt/root"

ENV ROOTSYS="/opt/root" \
    PATH="/opt/root/bin:$PATH" \
    LD_LIBRARY_PATH="/opt/root/lib:$LD_LIBRARY_PATH" \
    MANPATH="/opt/root/man:$MANPATH" \
    PYTHONPATH="/opt/root/lib:$PYTHONPATH"

RUN apt-get update -qq && apt-get -y install libqt5webkit5-dev libxcursor-dev

# VTK (G4 and pyg4ometry dependence) from the repos is too old
# I need to build it since this is the only way to get a vtk-config.cmake
RUN mkdir -p src build /opt/vtk && \
    wget -q -O- "https://www.vtk.org/files/release/9.1/VTK-9.1.0.tar.gz" \
        | tar --strip-components 1 -C src --strip=1 -x -z && \
    cd build && \
    cmake \
        -DVTK_GROUP_ENABLE_Qt=YES \
        -DBUILD_SHARED_LIBS=ON \
        -DCMAKE_INSTALL_PREFIX="/opt/vtk" \
        -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}" \
        ../src && \
    make -j ${N_THREADS} install && \
    cd .. && rm -rf src build

ENV PATH="/opt/vtk/bin:$PATH" \
    LD_LIBRARY_PATH="/opt/vtk/lib:$LD_LIBRARY_PATH"

# build and install GEANT4
RUN mkdir -p src build /opt/geant4 && \
    wget -q -O- "https://cern.ch/geant4-data/releases/geant4-v${GEANT4_VERSION}.tar.gz" \
        | tar --strip-components 1 -C src --strip=1 -x -z && \
    cd build && \
    cmake \
        -DCMAKE_INSTALL_PREFIX="/opt/geant4" \
        --fail-on-missing \
        --enable-shared \
        --enable-soversion \
        -DCMAKE_CXX_STANDARD=20 \
        -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}" \
        -DGEANT4_USE_GDML=ON \
        -DGEANT4_INSTALL_DATA=ON \
        -DGEANT4_INSTALL_DATASETS_TENDL=ON \
        -DGEANT4_USE_SYSTEM_EXPAT=ON \
        -DGEANT4_USE_SYSTEM_ZLIB=ON \
# better to use the officially supported CLHEP version
        -DGEANT4_USE_SYSTEM_CLHEP=OFF \
        -DGEANT4_BUILD_MULTITHREADED=ON \
# libhdf5must be compiled in thread-safe mode, if GEANT4 multithreading is enabled
        -DGEANT4_USE_HDF5=ON \
        -DGEANT4_USE_USOLIDS=ON \
        -DGEANT4_USE_QT=ON \
        -DGEANT4_USE_INVENTOR_QT=ON \
        -DGEANT4_USE_OPENGL_X11=ON \
        -DGEANT4_USE_RAYTRACER_X11=ON \
        -DGEANT4_USE_VTK=ON \
        ../src && \
    make -j ${N_THREADS} install && \
    cd .. && rm -rf src build

# there's no alternative to setting env vars explicitly
ENV PATH="/opt/geant4/bin:$PATH" \
    LD_LIBRARY_PATH="/opt/geant4/lib:$LD_LIBRARY_PATH" \
    G4ABLADATA="/opt/geant4/share/Geant4-11.0.0/data/G4ABLA3.1" \
    G4ENSDFSTATEDATA="/opt/geant4/share/Geant4-11.0.0/data/G4ENSDFSTATE2.3" \
    G4INCLDATA="/opt/geant4/share/Geant4-11.0.0/data/G4INCL1.0" \
    G4LEDATA="/opt/geant4/share/Geant4-11.0.0/data/G4EMLOW8.0" \
    G4LEVELGAMMADATA="/opt/geant4/share/Geant4-11.0.0/data/PhotonEvaporation5.7" \
    G4NEUTRONHPDATA="/opt/geant4/share/Geant4-11.0.0/data/G4NDL4.6" \
    G4PARTICLEXSDATA="/opt/geant4/share/Geant4-11.0.0/data/G4PARTICLEXS4.0" \
    G4PIIDATA="/opt/geant4/share/Geant4-11.0.0/data/G4PII1.3" \
    G4RADIOACTIVEDATA="/opt/geant4/share/Geant4-11.0.0/data/RadioactiveDecay5.6" \
    G4REALSURFACEDATA="/opt/geant4/share/Geant4-11.0.0/data/RealSurface2.2" \
    G4SAIDXSDATA="/opt/geant4/share/Geant4-11.0.0/data/G4SAIDDATA2.0" \
    G4TENDLDATA="/opt/geant4/share/Geant4-11.0.0/data/G4TENDL1.4"

ARG BXDECAY0_VERSION="git"

RUN mkdir -p src build /opt/bxdecay0 && \
    git lfs install && \
    if [[ "${BXDECAY0_VERSION}" == "git" ]]; then \
        git clone "https://github.com/BxCppDev/bxdecay0" src \
    else \
        wget -q -O- "https://github.com/BxCppDev/bxdecay0/archive/${BXDECAY0_VERSION}.tar.gz" | tar --strip-components 1 -C src --strip=1 -x -z \
    fi && \
    cd build && \
    cmake \
        -DCMAKE_INSTALL_PREFIX="/opt/bxdecay0" \
        -DCMAKE_CXX_STANDARD=20 \
        -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}" \
        -DBXDECAY0_WITH_GEANT4_EXTENSION=ON \
        # -DBXDECAY0_INSTALL_DBD_GA_DATA=ON \
        ../src && \
    make -j ${N_THREADS} install && \
    rm -rf build src

ENV PATH="/opt/bxdecay0/bin:$PATH" \
    LD_LIBRARY_PATH="/opt/bxdecay0/lib:$LD_LIBRARY_PATH"

# vim: ft=dockerfile
